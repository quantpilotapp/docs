{
  "openapi": "3.0.3",
  "info": {
    "title": "QuantPilot API",
    "version": "1.0.0",
    "description": "Comprehensive API for token analysis, technical indicators, yield optimization, and security analysis"
  },
  "servers": [{ "url": "https://api.quantpilot.ai" }],
  
  "tags": [
    {
      "name": "Technical Analysis",
      "description": "Technical indicators, patterns, and chart analysis"
    },
    {
      "name": "Market Inference",
      "description": "Token trends, pump detection, and similar token analysis"
    },
    {
      "name": "Yield",
      "description": "Yield optimization and pool analysis across chains"
    },
    {
      "name": "Security",
      "description": "Token security analysis and risk assessment"
    }
  ],
  
  "paths": {
    "/api/tokens": {
      "get": {
        "summary": "Get list of tokens",
        "description": "Returns a paginated list of tokens.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenList"
                }
              }
            }
          }
        },
        "tags": ["Tokens"]
      }
    },
    "/api/tokens/{token_address}": {
      "get": {
        
        "summary": "Get token details",
        "description": "Returns detailed information for a token.",
        "parameters": [
          {
            "name": "token_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique token address"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedToken"
                }
              }
            }
          }
        },
        "tags": ["Tokens"]
      }
    },
    "/tokens/{token_address}/followers": {
      "get": {
        
        "summary": "Get token followers",
        "description": "Returns a paginated list of followers for a token. Use the 'type' query parameter to filter for smart followers.",
        "parameters": [
          {
            "name": "token_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique token address"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of followers: all or smart",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["all", "smart"],
              "default": "all"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerList"
                }
              }
            }
          }
        },
        "tags": ["Social"]
      }
    },
    "/tokens/{token_address}/posts": {
      "get": {
        
        "summary": "Get token posts",
        "description": "Returns a paginated list of posts for a token.",
        "parameters": [
          {
            "name": "token_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique token address"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostList"
                }
              }
            }
          }
        },
        "tags": ["Social"]
      }
    },
    "/analytics/tokens/leaderboard": {
      "get": {
        
        "summary": "Get tokens leaderboard",
        "description": "Returns a leaderboard of tokens sorted by a specified metric.",
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "description": "Metric to sort by (e.g. followers, smart_followers, impressions, smart_reach, post_engagement, smart_engagement, market_cap, holders_growth)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Leaderboard"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/analytics/tokens/holders-growth": {
      "get": {
        "summary": "Get tokens sorted by impressions to market cap ratio",
        "description": "Returns tokens sorted by the ratio of impressions to market cap.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HoldersGrowthList"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/api/analytics/tokens/holders-growth": {
      "get": {
        "summary": "Get tokens by holders growth",
        "description": "Returns tokens sorted by holders growth.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HoldersGrowthList"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/analytics/tokens/smart-engagement": {
      "get": {
       
        "summary": "Get tokens by smart engagement",
        "description": "Returns tokens sorted by smart engagement.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartEngagementList"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/analytics/tokens/market-cap": {
      "get": {
       
        "summary": "Get tokens by market cap",
        "description": "Returns tokens sorted by market cap.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketCapList"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/api/technical/{contractAddress}/channel": {
      "get": {
        "tags": ["Technical Analysis"],
        "summary": "Get price channel analysis",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          },
          {
            "name": "timeframe",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["1h", "4h", "1d", "1w"],
              "default": "4h"
            }
          },
          {
            "name": "channelType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["bollinger", "keltner", "donchian"],
              "default": "bollinger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Channel analysis results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelAnalysis"
                }
              }
            }
          }
        }
      }
    },
    "/api/technical/{contractAddress}/trendline": {
      "get": {
        "tags": ["Technical Analysis"],
        "summary": "Get trendline analysis",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 14,
              "description": "Number of periods to analyze"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trendline analysis results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "trendlines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slope": {
                            "type": "number",
                            "description": "Slope of the trendline"
                          },
                          "intercept": {
                            "type": "number", 
                            "description": "Y-intercept of the trendline"
                          },
                          "r2": {
                            "type": "number",
                            "description": "R-squared value indicating fit quality"
                          },
                          "type": {
                            "type": "string",
                            "enum": ["support", "resistance"],
                            "description": "Whether this is a support or resistance line"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/inference/trending": {
      "get": {
        "tags": ["Market Inference"],
        "summary": "Get trending tokens",
        "parameters": [
          {
            "name": "chain",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["ethereum", "bsc", "arbitrum", "optimism"]
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["1h", "24h", "7d"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of trending tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrendingTokens"
                }
              }
            }
          }
        }
      }
    },
    "/api/{contractAddress}/similar-tokens": {
      "get": {
        "tags": ["Market Inference"],
        "summary": "Find similar tokens",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          },
          {
            "name": "prompt",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Additional context for similarity search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of similar tokens",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tokens": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Token"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/chains/{chainId}/wallets/{walletAddress}/reallocate": {
      "post": {
        "tags": ["Yield"],
        "summary": "Get yield optimization suggestions",
        "parameters": [
          {
            "name": "chainId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["eth", "bsc", "arb", "op"]
            }
          },
          {
            "name": "walletAddress",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReallocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Yield optimization suggestions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/YieldOptimization"
                }
              }
            }
          }
        }
      }
    },
    "/api/{contractAddress}/security/bubblemap": {
      "get": {
        "tags": ["Security"],
        "summary": "Get security risk bubble map",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "Security risk bubble map",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityBubbleMap"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PaginationParams": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 20
          },
          "total": {
            "type": "integer",
            "example": 1471
          }
        }
      },
      
      "TokenBase": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xabc123..."
          },
          "symbol": {
            "type": "string",
            "example": "BANKR"
          },
          "name": {
            "type": "string",
            "example": "Bankr"
          }
        }
      },
      
      "Token": {
        "allOf": [
          { "$ref": "#/components/schemas/TokenBase" },
          {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "example": 50.21
              },
              "market_cap": {
                "type": "number",
                "example": 20000000
              },
              "followers": {
                "type": "integer",
                "example": 21000
              },
              "smart_followers": {
                "type": "integer",
                "example": 180
              },
              "impressions": {
                "type": "integer",
                "example": 64199
              },
              "smart_reach": {
                "type": "integer",
                "example": 74726
              }
            }
          }
        ]
      },

      "TokenList": {
        "allOf": [
          { "$ref": "#/components/schemas/PaginationParams" },
          {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        ]
      },

      "DetailedToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Token"
          },
          {
            "type": "object",
            "properties": {
              "post_engagement": {
                "type": "integer",
                "example": 2200
              },
              "smart_engagement": {
                "type": "integer",
                "example": 150
              },
              "top_kols": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "kol_address": {
                      "type": "string",
                      "example": "0x111222..."
                    },
                    "handle": {
                      "type": "string",
                      "example": "@DeFiGuru"
                    },
                    "followers": {
                      "type": "integer",
                      "example": 500000
                    },
                    "engagement_rate": {
                      "type": "number",
                      "format": "float",
                      "example": 0.08
                    }
                  }
                }
              },
              "smart_follower_distribution": {
                "type": "object",
                "properties": {
                  "whale_holders": {
                    "type": "integer",
                    "example": 15
                  },
                  "medium_holders": {
                    "type": "integer",
                    "example": 150
                  },
                  "small_holders": {
                    "type": "integer",
                    "example": 1000
                  }
                }
              },
              "top_posts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Post"
                }
              },
              "holders_distribution": {
                "type": "object",
                "properties": {
                  "top_10_holders": {
                    "type": "number",
                    "example": 35.2
                  },
                  "top_50_holders": {
                    "type": "number",
                    "example": 60.1
                  }
                }
              },
              "whale_accumulation_trend": {
                "type": "string",
                "example": "increasing"
              }
            }
          }
        ]
      },
      "Follower": {
        "type": "object",
        "properties": {
          "follower_id": {
            "type": "string",
            "example": "f1"
          },
          "handle": {
            "type": "string",
            "example": "@WhaleMaster"
          },
          "wallet_address": {
            "type": "string",
            "example": "0x999aaa..."
          },
          "follower_type": {
            "type": "string",
            "example": "whale"
          },
          "estimated_portfolio": {
            "type": "number",
            "example": 2500000
          }
        }
      },
      "FollowerList": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xabc123..."
          },
          "type": {
            "type": "string",
            "example": "smart"
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 50
          },
          "total": {
            "type": "integer",
            "example": 180
          },
          "followers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Follower"
            }
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "post_id": {
            "type": "string",
            "example": "p1"
          },
          "token_address": {
            "type": "string",
            "example": "0xdef456..."
          },
          "title": {
            "type": "string",
            "example": "NEUR Partnership with XYZ"
          },
          "link": {
            "type": "string",
            "example": "https://social.example.com/neur/post/1"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-03-10T14:22:00Z"
          },
          "impressions": {
            "type": "integer",
            "example": 30000
          },
          "engagement": {
            "type": "integer",
            "example": 1200
          },
          "smart_engagement": {
            "type": "integer",
            "example": 100
          }
        }
      },
      "PostList": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xdef456..."
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 10
          },
          "total": {
            "type": "integer",
            "example": 50
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          }
        }
      },
      "Leaderboard": {
        "type": "object",
        "properties": {
          "sortBy": {
            "type": "string",
            "example": "market_cap"
          },
          "limit": {
            "type": "integer",
            "example": 10
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          }
        }
      },
      "HoldersGrowth": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xqqq000..."
          },
          "symbol": {
            "type": "string",
            "example": "QQQ"
          },
          "name": {
            "type": "string",
            "example": "QQQ Token"
          },
          "holders_growth": {
            "type": "number",
            "format": "float",
            "example": 12.5
          },
          "price": {
            "type": "number",
            "example": 1.15
          },
          "market_cap": {
            "type": "number",
            "example": 150000000
          }
        }
      },
      "HoldersGrowthList": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "example": 10
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoldersGrowth"
            }
          }
        }
      },
      "SmartEngagement": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xsmart001..."
          },
          "symbol": {
            "type": "string",
            "example": "SMART"
          },
          "name": {
            "type": "string",
            "example": "Smart Token"
          },
          "smart_engagement": {
            "type": "integer",
            "example": 150
          }
        }
      },
      "SmartEngagementList": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "example": 10
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmartEngagement"
            }
          }
        }
      },
      "MarketCap": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xmarket001..."
          },
          "symbol": {
            "type": "string",
            "example": "MKTCAP"
          },
          "name": {
            "type": "string",
            "example": "Market Cap Token"
          },
          "market_cap": {
            "type": "number",
            "example": 500000000
          }
        }
      },
      "MarketCapList": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "example": 10
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketCap"
            }
          }
        }
      },
      "ChannelAnalysis": {
        "type": "object",
        "properties": {
          "upperBound": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lowerBound": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "middleLine": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "breakoutProbability": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "TrendingTokens": {
        "type": "object",
        "properties": {
          "tokens": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "symbol": {
                  "type": "string"
                },
                "trendScore": {
                  "type": "number"
                },
                "volumeIncrease": {
                  "type": "number"
                },
                "socialMentions": {
                  "type": "integer"
                }
              }
            }
          }
        }
      },
      "ReallocationRequest": {
        "type": "object",
        "properties": {
          "tokens": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "amount": {
                  "type": "string",
                  "description": "Amount in wei"
                }
              }
            }
          },
          "riskTolerance": {
            "type": "string",
            "enum": ["conservative", "moderate", "aggressive"]
          }
        }
      },
      "YieldOptimization": {
        "type": "object",
        "properties": {
          "optimized_tokens": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string"
                },
                "amount": {
                  "type": "string"
                }
              }
            }
          },
          "total_yield": {
            "type": "number"
          }
        }
      },
      "SecurityBubbleMap": {
        "type": "object",
        "properties": {
          "contractRisks": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string"
                },
                "riskLevel": {
                  "type": "number"
                },
                "impact": {
                  "type": "number"
                },
                "details": {
                  "type": "string"
                }
              }
            }
          },
          "overallRiskScore": {
            "type": "number"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "parameters": {
      "tokenAddress": {
        "name": "token_address",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Unique token address"
      },
      "paginationPage": {
        "name": "page",
        "in": "query",
        "description": "Page number",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "paginationLimit": {
        "name": "limit",
        "in": "query",
        "description": "Number of items per page",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 20
        }
      },
      "contractAddress": {
        "name": "contractAddress",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Token contract address"
      }
    }
  }
}
