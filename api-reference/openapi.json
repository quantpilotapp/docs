{
  "openapi": "3.0.3",
  "info": {
    "title": "QuantPilot API",
    "version": "1.0.0",
    "description": "QuantPilot API"
  },
  "servers": [{ "url": "https://api.quantpilot.ai" }],
  
  "tags": [
    {
      "name": "Technical Analysis",
      "description": "Technical indicators, patterns, and chart analysis"
    },
    {
      "name": "Market Inference",
      "description": "Token trends, pump detection, and similar token analysis"
    },
    {
      "name": "Yield",
      "description": "Yield optimization and pool analysis across chains"
    },
    {
      "name": "Security",
      "description": "Token security analysis and risk assessment"
    }
  ],
  
  "paths": {
        "/yield/optimize": {
          "post": {
            "tags": ["Yield"],
            "summary": "Optimize portfolio yield allocation",
            "description": "Optimize yield allocation across DeFi protocols for a given portfolio",
            "requestBody": {
              "required": true,
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": ["tokens"],
                    "properties": {
                      "tokens": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Map of token addresses to amounts in smallest unit (e.g., wei)",
                        "example": {
                          "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984": "1000000000000000000",
                          "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48": "5000000000"
                        }
                      },
                      "settings": {
                        "type": "object",
                        "properties": {
                          "riskLevel": {
                            "type": "string",
                            "enum": ["low", "medium", "high"],
                            "default": "medium",
                            "description": "Risk tolerance level"
                          },
                          "chains": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": ["eth", "bsc", "arb", "op"]
                            },
                            "description": "Chains to include in optimization",
                            "default": ["eth", "arb", "op"]
                          },
                          "minApy": {
                            "type": "number",
                            "description": "Minimum APY to consider (%)",
                            "default": 3.0
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "Optimized yield strategy",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "strategies": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "type": "string",
                                "description": "Protocol name",
                                "example": "Aave V3"
                              },
                              "chain": {
                                "type": "string",
                                "description": "Chain ID",
                                "example": "eth"
                              },
                              "token": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "type": "string",
                                    "example": "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984"
                                  },
                                  "symbol": {
                                    "type": "string",
                                    "example": "UNI"
                                  },
                                  "amount": {
                                    "type": "string",
                                    "description": "Amount in smallest unit",
                                    "example": "1000000000000000000"
                                  }
                                }
                              },
                              "apy": {
                                "type": "number",
                                "description": "Expected APY (%)",
                                "example": 12.5
                              },
                              "tvl": {
                                "type": "number",
                                "description": "Total Value Locked in USD",
                                "example": 150000000
                              }
                            }
                          }
                        },
                        "summary": {
                          "type": "object",
                          "properties": {
                            "totalValueUsd": {
                              "type": "number",
                              "description": "Total portfolio value in USD",
                              "example": 7500.00
                            },
                            "estimatedAnnualYieldUsd": {
                              "type": "number",
                              "description": "Estimated annual yield in USD",
                              "example": 825.00
                            },
                            "weightedApy": {
                              "type": "number",
                              "description": "Weighted average APY",
                              "example": 11.0
                            },
                            "gasEstimateUsd": {
                              "type": "number",
                              "description": "Estimated gas cost in USD",
                              "example": 25.50
                            }
                          }
                        },
                        "steps": {
                          "type": "array",
                          "description": "Steps to implement the strategy",
                          "items": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "type": "string",
                                "example": "Bridge USDC to Arbitrum"
                              },
                              "gasEstimateUsd": {
                                "type": "number",
                                "example": 12.25
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": {
                      "strategies": [
                        {
                          "protocol": "Aave V3",
                          "chain": "eth",
                          "token": {
                            "address": "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",
                            "symbol": "UNI",
                            "amount": "1000000000000000000"
                          },
                          "apy": 12.5,
                          "tvl": 150000000
                        },
                        {
                          "protocol": "Compound V3",
                          "chain": "arb",
                          "token": {
                            "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                            "symbol": "USDC",
                            "amount": "5000000000"
                          },
                          "apy": 8.2,
                          "tvl": 250000000
                        }
                      ],
                      "summary": {
                        "totalValueUsd": 7500.00,
                        "estimatedAnnualYieldUsd": 825.00,
                        "weightedApy": 11.0,
                        "gasEstimateUsd": 25.50
                      },
                      "steps": [
                        {
                          "action": "Bridge USDC to Arbitrum",
                          "gasEstimateUsd": 12.25
                        },
                        {
                          "action": "Deposit UNI to Aave V3",
                          "gasEstimateUsd": 8.15
                        },
                        {
                          "action": "Deposit USDC to Compound V3",
                          "gasEstimateUsd": 5.10
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },

    "/tokens": {
      "get": {
        "summary": "Get list of tokens",
        "description": "Returns a paginated list of tokens.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenList"
                }
              }
            }
          }
        },
        "tags": ["Tokens"]
      }
    },
    "/tokens/{token_address}": {
      "get": {
        
        "summary": "Get token details",
        "description": "Returns detailed information for a token.",
        "parameters": [
          {
            "name": "token_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique token address"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedToken"
                }
              }
            }
          }
        },
        "tags": ["Tokens"]
      }
    },
    "/tokens/{token_address}/followers": {
      "get": {
        
        "summary": "Get token followers",
        "description": "Returns a paginated list of followers for a token. Use the 'type' query parameter to filter for smart followers.",
        "parameters": [
          {
            "name": "token_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique token address"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of followers: all or smart",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["all", "smart"],
              "default": "all"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerList"
                }
              }
            }
          }
        },
        "tags": ["Social"]
      }
    },
    "/tokens/{token_address}/posts": {
      "get": {
        
        "summary": "Get token posts",
        "description": "Returns a paginated list of posts for a token.",
        "parameters": [
          {
            "name": "token_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique token address"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostList"
                }
              }
            }
          }
        },
        "tags": ["Social"]
      }
    },
    "/analytics/tokens/leaderboard": {
      "get": {
        
        "summary": "Get tokens leaderboard",
        "description": "Returns a leaderboard of tokens sorted by a specified metric.",
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "description": "Metric to sort by (e.g. followers, smart_followers, impressions, smart_reach, post_engagement, smart_engagement, market_cap, holders_growth)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Leaderboard"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/analytics/tokens/holders-growth": {
      "get": {
        "summary": "Get tokens sorted by impressions to market cap ratio",
        "description": "Returns tokens sorted by the ratio of impressions to market cap.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HoldersGrowthList"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/api/analytics/tokens/holders-growth": {
      "get": {
        "summary": "Get tokens by holders growth",
        "description": "Returns tokens sorted by holders growth.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HoldersGrowthList"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/analytics/tokens/smart-engagement": {
      "get": {
       
        "summary": "Get tokens by smart engagement",
        "description": "Returns tokens sorted by smart engagement.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartEngagementList"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/analytics/tokens/market-cap": {
      "get": {
       
        "summary": "Get tokens by market cap",
        "description": "Returns tokens sorted by market cap.",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketCapList"
                }
              }
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/technical/channel": {
      "post": {
        "tags": [
          "Technical Analysis"
        ],
        "summary": "Detect price channels",
        "description": "Analyzes price data to detect technical channels and optionally sets up webhook alerts",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contract_address",
            "in": "query", 
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "So11111111111111111111111111111111111111112",
            "description": "Token contract address"
          },
          {
            "name": "chain",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "solana",
                "ethereum", 
                "arbitrum",
                "avalanche",
                "bsc",
                "optimism",
                "polygon",
                "base",
                "zksync",
                "sui"
              ]
            },
            "example": "solana",
            "description": "Blockchain network"
          },
          {
            "name": "num_candles",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 10,
              "maximum": 100,
              "default": 50
            },
            "example": 50,
            "description": "Number of candles to analyze"
          },
          {
            "name": "candle_width",
            "in": "query", 
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["5m", "15m", "1H", "4H", "1D", "1W", "1M"],
              "default": "4H"
            },
            "example": "4H",
            "description": "Candle width"
          },
          {
            "name": "strictness",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "default": 0.5
            },
            "example": 0.5,
            "description": "Strictness of channel detection. Lower is looser."
          },
          {
            "name": "webhook_url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "example": "https://discord.com/api/webhooks/1234567890/abcdefghijklmnopqrstuvwxyz",
            "description": "URL to receive channel break alerts"
          }
        ],
        "responses": {
          "200": {
            "description": "Channel detected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_lower_price": {
                      "type": "number",
                      "example": 88.74,
                      "description": "Current price at lower channel boundary"
                    },
                    "current_upper_price": {
                      "type": "number",
                      "example": 129.81,
                      "description": "Current price at upper channel boundary"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "channel": {
                          "type": "object",
                          "properties": {
                            "channel_end_idx": {
                              "type": "integer",
                              "example": 89
                            },
                            "channel_end_timestamp": {
                              "type": "integer",
                              "example": 1742688000
                            },
                            "channel_start_idx": {
                              "type": "integer",
                              "example": 28
                            },
                            "channel_start_timestamp": {
                              "type": "integer",
                              "example": 1737504000
                            },
                            "is_valid": {
                              "type": "boolean",
                              "example": true
                            },
                            "lower_intercept": {
                              "type": "number",
                              "example": 36838.11
                            },
                            "lower_r2": {
                              "type": "number",
                              "example": 0.986
                            },
                            "lower_slope": {
                              "type": "number",
                              "example": -0.000021
                            },
                            "lower_touches_ts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "idx": {
                                    "type": "integer",
                                    "example": 29
                                  },
                                  "price": {
                                    "type": "number",
                                    "example": 241.94
                                  },
                                  "rank": {
                                    "type": "integer",
                                    "example": 4
                                  },
                                  "ts": {
                                    "type": "integer",
                                    "example": 1737590400
                                  }
                                }
                              }
                            },
                            "score": {
                              "type": "number",
                              "example": 1.97
                            },
                            "upper_intercept": {
                              "type": "number",
                              "example": 48010.36
                            },
                            "upper_r2": {
                              "type": "number",
                              "example": 0.990
                            },
                            "upper_slope": {
                              "type": "number",
                              "example": -0.000027
                            },
                            "upper_touches_ts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "idx": {
                                    "type": "integer",
                                    "example": 28
                                  },
                                  "price": {
                                    "type": "number",
                                    "example": 272.35
                                  },
                                  "rank": {
                                    "type": "integer",
                                    "example": 12
                                  },
                                  "ts": {
                                    "type": "integer",
                                    "example": 1737504000
                                  }
                                }
                              }
                            }
                          }
                        },
                        "image": {
                          "type": "string",
                          "description": "Base64 encoded image of the channel visualization",
                          "example": "base64_encoded_image_string"
                        },
                        "webhook_registered": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Channel detected"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API key"
          },
          "403": {
            "description": "Insufficient permissions"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Technical Analysis"
        ],
        "summary": "Deactivate channel alert",
        "description": "Deactivates an existing channel alert by setting is_active to false",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the webhook alert to deactivate",
            "example": "abc123def456"
          }
        ],
        "responses": {
          "200": {
            "description": "Alert deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "message",
                    "webhook_id"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Alert deactivated successfully"
                    },
                    "webhook_id": {
                      "type": "string",
                      "example": "abc123def456"
                    }
                  }
                },
                "example": {
                  "message": "Alert deactivated successfully",
                  "webhook_id": "abc123def456"
                }
              }
            }
          },
          "400": {
            "description": "Missing webhook_id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Missing webhook_id"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid or missing API key"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Insufficient permissions"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Alert not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Alert with webhook_id abc123def456 not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error deactivating alert"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    
    "/technical/{contractAddress}/trendline": {
      "get": {
        "tags": ["Technical Analysis"],
        "summary": "Get trendline analysis",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 14,
              "description": "Number of periods to analyze"
            },
            "example": 14
          }
        ],
        "responses": {
          "200": {
            "description": "Trendline analysis results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrendlineAnalysis"
                },
                "example": {
                  "trendlines": [
                    {
                      "slope": 0.15,
                      "intercept": 1250.34,
                      "r2": 0.87,
                      "type": "support",
                      "strength": "strong"
                    },
                    {
                      "slope": 0.22,
                      "intercept": 1450.45,
                      "r2": 0.82,
                      "type": "resistance",
                      "strength": "medium"
                    }
                  ],
                  "trend": "upward",
                  "confidence": 0.78
                }
              }
            }
          }
        }
      }
    },
    "/technical/{contractAddress}/patterns": {
      "get": {
        "tags": ["Technical Analysis"],
        "summary": "Detect chart patterns",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          },
          {
            "name": "timeframe",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["1h", "4h", "1d", "1w"],
              "default": "1d"
            },
            "example": "1d"
          }
        ],
        "responses": {
          "200": {
            "description": "Detected chart patterns",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatternAnalysis"
                },
                "example": {
                  "patterns": [
                    {
                      "name": "double bottom",
                      "confidence": 0.92,
                      "completionPercent": 85,
                      "projectedMovement": 0.15,
                      "startIndex": 14,
                      "endIndex": 28
                    }
                  ],
                  "recommendedAction": "bullish"
                }
              }
            }
          }
        }
      }
    },
    "/chains/{chainId}/{contractAddress}/security/basic": {
      "get": {
        "tags": ["Security"],
        "summary": "Get basic security analysis",
        "parameters": [
          {
            "name": "chainId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["eth", "bsc", "arb", "op"]
            },
            "example": "eth"
          },
          {
            "$ref": "#/components/parameters/contractAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "Basic security analysis",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicSecurity"
                },
                "example": {
                  "verified": true,
                  "audited": true,
                  "auditReports": [
                    {
                      "auditor": "CertiK",
                      "date": "2023-12-01",
                      "link": "https://certik.com/reports/example"
                    }
                  ],
                  "honeypotRisk": "none",
                  "rugpullRisk": "low",
                  "maliciousFunctions": [],
                  "ownerFunctions": [
                    {
                      "name": "setFees",
                      "risk": "medium",
                      "description": "Allows owner to modify transaction fees"
                    }
                  ],
                  "overallRisk": "low"
                }
              }
            }
          }
        }
      }
    },
    "/{contractAddress}/security/inference": {
      "get": {
        "tags": ["Security"],
        "summary": "Get security inference analysis",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "Security inference analysis",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityInference"
                },
                "example": {
                  "securityScore": 85,
                  "anomalyDetection": {
                    "transactionPatterns": {
                      "score": 90,
                      "anomalies": []
                    },
                    "holderDistribution": {
                      "score": 85,
                      "anomalies": ["High concentration in top 10 holders"]
                    },
                    "codePatterns": {
                      "score": 95,
                      "anomalies": []
                    }
                  },
                  "similarScams": [],
                  "recommendation": "Token appears secure with standard centralization risks"
                }
              }
            }
          }
        }
      }
    },
    "/{contractAddress}/pools": {
      "get": {
        "tags": ["Yield"],
        "summary": "Get liquidity pools for token",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          },
          {
            "name": "minLiquidity",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "Minimum liquidity in USD"
            },
            "example": 100000
          }
        ],
        "responses": {
          "200": {
            "description": "List of liquidity pools",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoolList"
                },
                "example": {
                  "pools": [
                    {
                      "dex": "Uniswap V3",
                      "address": "0x8ad599c3a0ff1de082011efddc58f1908eb6e6d8",
                      "fee": 0.3,
                      "token0": {
                        "address": "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
                        "symbol": "USDC"
                      },
                      "token1": {
                        "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                        "symbol": "WETH"
                      },
                      "liquidity": 15000000,
                      "apr": 25.5,
                      "volume24h": 1200000
                    }
                  ],
                  "totalPoolCount": 5,
                  "totalLiquidity": 45000000
                }
              }
            }
          }
        }
      }
    },
    "/{contractAddress}/dexes": {
      "get": {
        "tags": ["Yield"],
        "summary": "Get DEX information for token",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "List of DEXes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DexList"
                },
                "example": {
                  "dexes": [
                    {
                      "name": "Uniswap V3",
                      "chainId": "1",
                      "volume24h": 1500000,
                      "poolCount": 3,
                      "bestPool": {
                        "address": "0x8ad599c3a0ff1de082011efddc58f1908eb6e6d8",
                        "pair": "WETH/USDC",
                        "liquidity": 15000000
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/{contractAddress}/dexes/{dexId}": {
      "get": {
        "tags": ["Yield"],
        "summary": "Get detailed DEX information",
        "parameters": [
          {
            "$ref": "#/components/parameters/contractAddress"
          },
          {
            "name": "dexId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "uniswap_v3"
          }
        ],
        "responses": {
          "200": {
            "description": "Detailed DEX information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DexInfo"
                },
                "example": {
                  "name": "Uniswap V3",
                  "chainId": "1",
                  "version": "3.0.0",
                  "router": "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45",
                  "factory": "0x1F98431c8aD98523631AE4a59f267346ea31F984",
                  "feeStructure": [
                    {
                      "tier": "low",
                      "fee": 0.05
                    },
                    {
                      "tier": "medium",
                      "fee": 0.3
                    },
                    {
                      "tier": "high",
                      "fee": 1.0
                    }
                  ],
                  "totalValueLocked": 500000000,
                  "pools": [
                    {
                      "address": "0x8ad599c3a0ff1de082011efddc58f1908eb6e6d8",
                      "pair": "WETH/USDC",
                      "liquidity": 15000000,
                      "volume24h": 1200000
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "API key for authentication"
      }
    },
    
    "schemas": {
      "PaginationParams": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 20
          },
          "total": {
            "type": "integer",
            "example": 1471
          }
        }
      },
      
      "TokenBase": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xabc123..."
          },
          "symbol": {
            "type": "string",
            "example": "BANKR"
          },
          "name": {
            "type": "string",
            "example": "Bankr"
          }
        }
      },
      
      "Token": {
        "allOf": [
          { "$ref": "#/components/schemas/TokenBase" },
          {
            "type": "object",
            "properties": {
              "price": {
                "type": "number",
                "example": 50.21
              },
              "market_cap": {
                "type": "number",
                "example": 20000000
              },
              "followers": {
                "type": "integer",
                "example": 21000
              },
              "smart_followers": {
                "type": "integer",
                "example": 180
              },
              "impressions": {
                "type": "integer",
                "example": 64199
              },
              "smart_reach": {
                "type": "integer",
                "example": 74726
              }
            }
          }
        ]
      },

      "TokenList": {
        "allOf": [
          { "$ref": "#/components/schemas/PaginationParams" },
          {
            "type": "object",
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        ]
      },

      "DetailedToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Token"
          },
          {
            "type": "object",
            "properties": {
              "post_engagement": {
                "type": "integer",
                "example": 2200
              },
              "smart_engagement": {
                "type": "integer",
                "example": 150
              },
              "top_kols": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "kol_address": {
                      "type": "string",
                      "example": "0x111222..."
                    },
                    "handle": {
                      "type": "string",
                      "example": "@DeFiGuru"
                    },
                    "followers": {
                      "type": "integer",
                      "example": 500000
                    },
                    "engagement_rate": {
                      "type": "number",
                      "format": "float",
                      "example": 0.08
                    }
                  }
                }
              },
              "smart_follower_distribution": {
                "type": "object",
                "properties": {
                  "whale_holders": {
                    "type": "integer",
                    "example": 15
                  },
                  "medium_holders": {
                    "type": "integer",
                    "example": 150
                  },
                  "small_holders": {
                    "type": "integer",
                    "example": 1000
                  }
                }
              },
              "top_posts": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Post"
                }
              },
              "holders_distribution": {
                "type": "object",
                "properties": {
                  "top_10_holders": {
                    "type": "number",
                    "example": 35.2
                  },
                  "top_50_holders": {
                    "type": "number",
                    "example": 60.1
                  }
                }
              },
              "whale_accumulation_trend": {
                "type": "string",
                "example": "increasing"
              }
            }
          }
        ]
      },
      "Follower": {
        "type": "object",
        "properties": {
          "follower_id": {
            "type": "string",
            "example": "f1"
          },
          "handle": {
            "type": "string",
            "example": "@WhaleMaster"
          },
          "wallet_address": {
            "type": "string",
            "example": "0x999aaa..."
          },
          "follower_type": {
            "type": "string",
            "example": "whale"
          },
          "estimated_portfolio": {
            "type": "number",
            "example": 2500000
          }
        }
      },
      "FollowerList": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xabc123..."
          },
          "type": {
            "type": "string",
            "example": "smart"
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 50
          },
          "total": {
            "type": "integer",
            "example": 180
          },
          "followers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Follower"
            }
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "post_id": {
            "type": "string",
            "example": "p1"
          },
          "token_address": {
            "type": "string",
            "example": "0xdef456..."
          },
          "title": {
            "type": "string",
            "example": "NEUR Partnership with XYZ"
          },
          "link": {
            "type": "string",
            "example": "https://social.example.com/neur/post/1"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-03-10T14:22:00Z"
          },
          "impressions": {
            "type": "integer",
            "example": 30000
          },
          "engagement": {
            "type": "integer",
            "example": 1200
          },
          "smart_engagement": {
            "type": "integer",
            "example": 100
          }
        }
      },
      "PostList": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xdef456..."
          },
          "page": {
            "type": "integer",
            "example": 1
          },
          "limit": {
            "type": "integer",
            "example": 10
          },
          "total": {
            "type": "integer",
            "example": 50
          },
          "posts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Post"
            }
          }
        }
      },
      "Leaderboard": {
        "type": "object",
        "properties": {
          "sortBy": {
            "type": "string",
            "example": "market_cap"
          },
          "limit": {
            "type": "integer",
            "example": 10
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          }
        }
      },
      "HoldersGrowth": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xqqq000..."
          },
          "symbol": {
            "type": "string",
            "example": "QQQ"
          },
          "name": {
            "type": "string",
            "example": "QQQ Token"
          },
          "holders_growth": {
            "type": "number",
            "format": "float",
            "example": 12.5
          },
          "price": {
            "type": "number",
            "example": 1.15
          },
          "market_cap": {
            "type": "number",
            "example": 150000000
          }
        }
      },
      "HoldersGrowthList": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "example": 10
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HoldersGrowth"
            }
          }
        }
      },
      "SmartEngagement": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xsmart001..."
          },
          "symbol": {
            "type": "string",
            "example": "SMART"
          },
          "name": {
            "type": "string",
            "example": "Smart Token"
          },
          "smart_engagement": {
            "type": "integer",
            "example": 150
          }
        }
      },
      "SmartEngagementList": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "example": 10
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmartEngagement"
            }
          }
        }
      },
      "MarketCap": {
        "type": "object",
        "properties": {
          "token_address": {
            "type": "string",
            "example": "0xmarket001..."
          },
          "symbol": {
            "type": "string",
            "example": "MKTCAP"
          },
          "name": {
            "type": "string",
            "example": "Market Cap Token"
          },
          "market_cap": {
            "type": "number",
            "example": 500000000
          }
        }
      },
      "MarketCapList": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "example": 10
          },
          "tokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketCap"
            }
          }
        }
      },
      "ChannelAnalysis": {
        "type": "object",
        "properties": {
          "upperBound": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "lowerBound": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "middleLine": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "quality": {
            "type": "number",
            "format": "float"
          },
          "breakoutProbability": {
            "type": "number",
            "format": "float"
          },
          "lowerLine": {
            "type": "object",
            "properties": {
              "slope": {
                "type": "number"
              },
              "intercept": {
                "type": "number"
              },
              "r2": {
                "type": "number"
              },
              "touchPoints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "upperLine": {
            "type": "object",
            "properties": {
              "slope": {
                "type": "number"
              },
              "intercept": {
                "type": "number"
              },
              "r2": {
                "type": "number"
              },
              "touchPoints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "number"
                    },
                    "price": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "TrendlineAnalysis": {
        "type": "object",
        "properties": {
          "trendlines": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "slope": {
                  "type": "number",
                  "description": "Slope of the trendline"
                },
                "intercept": {
                  "type": "number",
                  "description": "Y-intercept of the trendline"
                },
                "r2": {
                  "type": "number",
                  "description": "R-squared value indicating fit quality"
                },
                "type": {
                  "type": "string",
                  "enum": ["support", "resistance"],
                  "description": "Whether this is a support or resistance line"
                },
                "strength": {
                  "type": "string",
                  "description": "Strength of the trendline"
                }
              }
            }
          },
          "trend": {
            "type": "string",
            "description": "Overall trend of the token"
          },
          "confidence": {
            "type": "number",
            "format": "float",
            "description": "Confidence level in the trend analysis"
          }
        }
      },
      "PatternAnalysis": {
        "type": "object",
        "properties": {
          "patterns": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the detected pattern"
                },
                "confidence": {
                  "type": "number",
                  "format": "float",
                  "description": "Confidence level in the pattern detection"
                },
                "completionPercent": {
                  "type": "number",
                  "format": "float",
                  "description": "Completion percentage of the pattern"
                },
                "projectedMovement": {
                  "type": "number",
                  "format": "float",
                  "description": "Projected movement percentage"
                },
                "startIndex": {
                  "type": "integer",
                  "description": "Start index of the pattern"
                },
                "endIndex": {
                  "type": "integer",
                  "description": "End index of the pattern"
                }
              }
            }
          },
          "recommendedAction": {
            "type": "string",
            "description": "Recommended action based on the detected patterns"
          }
        }
      },
      "BasicSecurity": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean",
            "description": "Whether the contract is verified on the blockchain explorer"
          },
          "audited": {
            "type": "boolean",
            "description": "Whether the contract has been audited"
          },
          "auditReports": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "auditor": {
                  "type": "string",
                  "description": "Name of auditor or audit firm"
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Date of audit"
                },
                "link": {
                  "type": "string",
                  "description": "Link to audit report"
                }
              }
            }
          },
          "honeypotRisk": {
            "type": "string",
            "enum": ["none", "low", "medium", "high", "critical"],
            "description": "Risk of contract being a honeypot"
          },
          "rugpullRisk": {
            "type": "string",
            "enum": ["none", "low", "medium", "high", "critical"],
            "description": "Risk of contract being a rug pull"
          },
          "maliciousFunctions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Function name"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the malicious behavior"
                },
                "severity": {
                  "type": "string",
                  "enum": ["low", "medium", "high", "critical"],
                  "description": "Severity of the issue"
                }
              }
            }
          },
          "ownerFunctions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Function name"
                },
                "risk": {
                  "type": "string",
                  "enum": ["none", "low", "medium", "high", "critical"],
                  "description": "Risk level of the owner function"
                },
                "description": {
                  "type": "string",
                  "description": "Description of what the function does"
                }
              }
            }
          },
          "overallRisk": {
            "type": "string",
            "enum": ["none", "low", "medium", "high", "critical"],
            "description": "Overall risk assessment"
          }
        }
      },
      "SecurityInference": {
        "type": "object",
        "properties": {
          "securityScore": {
            "type": "integer",
            "description": "Overall security score out of 100"
          },
          "anomalyDetection": {
            "type": "object",
            "properties": {
              "transactionPatterns": {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Transaction pattern analysis score"
                  },
                  "anomalies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Detected transaction anomalies"
                  }
                }
              },
              "holderDistribution": {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Holder distribution analysis score"
                  },
                  "anomalies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Detected holder distribution anomalies"
                  }
                }
              },
              "codePatterns": {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Code pattern analysis score"
                  },
                  "anomalies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Detected code anomalies"
                  }
                }
              }
            }
          },
          "similarScams": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "Address of similar scam token"
                },
                "similarity": {
                  "type": "number",
                  "description": "Similarity score"
                },
                "scamType": {
                  "type": "string",
                  "description": "Type of scam"
                }
              }
            },
            "description": "Similar tokens identified as scams"
          },
          "recommendation": {
            "type": "string",
            "description": "Security recommendation for users"
          }
        }
      },
      "Pool": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "0xabc123..."
          },
          "symbol": {
            "type": "string"
          },
          "liquidity": {
            "type": "number",
            "description": "Total liquidity in USD"
          },
          "apr": {
            "type": "number",
            "description": "Annual percentage rate"
          },
          "volume24h": {
            "type": "number",
            "description": "24-hour trading volume in USD"
          }
        }
      },
      "PoolList": {
        "type": "object",
        "properties": {
          "pools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pool"
            }
          },
          "totalPoolCount": {
            "type": "integer",
            "description": "Total number of pools"
          },
          "totalLiquidity": {
            "type": "number",
            "description": "Total liquidity across all pools in USD"
          }
        }
      },
      "DexList": {
        "type": "object",
        "properties": {
          "dexes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "DEX name"
                },
                "chainId": {
                  "type": "string",
                  "description": "Chain ID where DEX is deployed"
                },
                "volume24h": {
                  "type": "number",
                  "description": "24-hour trading volume for this token in USD"
                },
                "poolCount": {
                  "type": "integer",
                  "description": "Number of pools with this token"
                },
                "bestPool": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "Pool contract address"
                    },
                    "pair": {
                      "type": "string",
                      "description": "Trading pair"
                    },
                    "liquidity": {
                      "type": "number",
                      "description": "Pool liquidity in USD"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "DexInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "DEX name"
          },
          "chainId": {
            "type": "string",
            "description": "Chain ID where DEX is deployed"
          },
          "version": {
            "type": "string",
            "description": "DEX version"
          },
          "router": {
            "type": "string",
            "description": "Router contract address"
          },
          "factory": {
            "type": "string",
            "description": "Factory contract address"
          },
          "feeStructure": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tier": {
                  "type": "string",
                  "description": "Fee tier name"
                },
                "fee": {
                  "type": "number",
                  "description": "Fee percentage"
                }
              }
            }
          },
          "totalValueLocked": {
            "type": "number",
            "description": "Total value locked in USD"
          },
          "pools": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "Pool contract address"
                },
                "pair": {
                  "type": "string",
                  "description": "Trading pair"
                },
                "liquidity": {
                  "type": "number",
                  "description": "Pool liquidity in USD"
                },
                "volume24h": {
                  "type": "number",
                  "description": "24-hour trading volume in USD"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "tokenAddress": {
        "name": "token_address",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Unique token address"
      },
      "paginationPage": {
        "name": "page",
        "in": "query",
        "description": "Page number",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "paginationLimit": {
        "name": "limit",
        "in": "query",
        "description": "Number of items per page",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 20
        }
      },
      "contractAddress": {
        "name": "contractAddress",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Token contract address",
        "example": "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984"
      }
    }
  }
}
